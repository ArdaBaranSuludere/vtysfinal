<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ımageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADK
        DAAAAk1TRnQBSQFMAwEBAAEoAQABKAEAASgBAAEoAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABoAMA
        ASgDAAEBAQABIAYAAWQWAAMCAQMDPgFrA1EB0QMUAfoDNwHsA1IBpwMcASdgAAMcAScDUgGnAzcB7AMU
        AfoDUQHRAz4BawMCAQP/AOUAAwIBAwNTAa0DAAH/AzcB7ANVAbQDVAHKAwUB/gMmAfMDKwFCWAADKwFC
        AyYB8wMFAf4DVAHKA1UBtAM6AesDAAH/A1MBrQMCAQP/AOEAAz4BawMAAf8DVAGrAwkBDAgAAywBQwMv
        Ae8DHgH1AysBQlAAAysBQgMeAfUDLwHvAywBQwgAAwkBDANUAasDAAH/Az4Ba/8A4QADUQHRAzcB7AMJ
        AQwQAAMlATYDLwHvAx4B9QMrAUJIAAMrAUIDHgH1Ay8B7wMlATYQAAMJAQsDOgHrA1EB0f8A4QADFAH6
        A1UBtBgAAyUBNgMvAe8DHgH1AysBQkAAAysBQgMeAfUDLwHvAyUBNhgAA1UBtAMUAfr/AOEAAzcB7ANU
        AcocAAMlATYDLwHvAx4B9QMsAUM4AAMsAUMDHgH1Ay8B7wMlATYcAANUAcoDNwHs/wDhAANSAacDBQH+
        AywBQxwAAyUBNgMvAe8DHgH1AywBQzAAAywBQwMeAfUDLwHvAyUBNhwAAywBQwMFAf4DUgGn/wDhAAMc
        AScDJgHzAy8B7wMlATccAAMlATcDLwHvAx4B9QMrAUIoAAMrAUIDHgH1Ay8B7wMlATccAAMlATcDLwHv
        AyYB8wMcASf/AOUAAysBQgMeAfUDLwHvAyUBNhwAAyUBNgMvAe8DHgH1AysBQiAAAysBQgMeAfUDLwHv
        AyUBNhwAAyUBNgMvAe8DHgH1AysBQv8A7QADLAFDAx4B9QMvAe8DJQE2HAADJQE2Ay8B7wMeAfUDKwFC
        GAADKwFCAx4B9QMvAe8DJQE2HAADJQE2Ay8B7wMeAfUDLAFD/wD1AAMrAUIDHgH1Ay8B7wMlATYcAAMl
        ATYDLwHvAx4B9QMsAUMQAAMsAUMDHgH1Ay8B7wMlATYcAAMlATYDLwHvAx4B9QMrAUL/AP0AAysBQgMe
        AfUDLwHvAyUBNhwAAyUBNgMvAe8DHgH1AywBQwgAAywBQwMeAfUDLwHvAyUBNhwAAyUBNgMvAe8DHgH1
        AysBQv8A/wAGAAMrAUIDHgH1Ay8B7wMlATccAAMlATcDLwHvAx4B9QMrAUIDKwFCAx4B9QMvAe8DJQE3
        HAADJQE3Ay8B7wMeAfUDKwFC/wD/AA4AAysBQgMeAfUDLwHvAyUBNhwAAyUBNgMvAe8DHgH1Ax4B9QMv
        Ae8DJQE2HAADJQE2Ay8B7wMeAfUDLAFD/wD/ABYAAywBQwMeAfUDLwHvAyUBNhwAAyUBNgMvAe8DLwHv
        AyUBNhwAAyUBNgMvAe8DHgH1AywBQ/8A/wAeAAMrAUIDHgH1Ay8B7wMlATYcAAMYASEDGAEhHAADJQE2
        Ay8B7wMeAfUDKwFC/wD/ACYAAysBQgMeAfUDLwHvAyUBNjgAAyUBNgMvAe8DHgH1AysBQv8A/wAuAAMr
        AUIDHgH1Ay8B7wMlATcwAAMlATcDLwHvAx4B9QMrAUL/AP8ANgADKwFCAx4B9QMvAe8DJQE2KAADJQE2
        Ay8B7wMeAfUDLAFD/wD/AD4AAywBQwMeAfUDLwHvAxgBISAAAxgBIQMvAe8DHgH1AywBQ/8A/wBCAAMs
        AUMDHgH1Ay8B7wMYASEgAAMYASEDLwHvAx4B9QMsAUP/AP8APgADLAFDAx4B9QMvAe8DJQE2KAADJQE2
        Ay8B7wMeAfUDLAFD/wD/ADYAAysBQgMeAfUDLwHvAyUBNxwABAIDDwEUDAADJQE3Ay8B7wMeAfUDKwFC
        /wD/AC4AAysBQgMeAfUDLwHvAyUBNiAAA0ABcAMYAfkDMwFSDAADJQE2Ay8B7wMeAfUDKwFC/wD/ACYA
        AysBQgMeAfUDLwHvAyUBNhwAAxgBIQMYASEDGwEmAz8B5wMUAfoDMwFSDAADJQE2Ay8B7wMeAfUDKwFC
        /wD/AB4AAywBQwMeAfUDLwHvAyUBNhwAAyUBNgMvAe8DLwHvAyUBNgMdASkDPwHnAxQB+gMzAVIMAAMl
        ATYDLwHvAx4B9QMsAUP/AP8AFgADLAFDAx4B9QMvAe8DJQE2HAADJQE2Ay8B7wMeAfUDHgH1Ay8B7wMl
        ATYDHQEpAz8B5wMUAfoDMwFSDAADJQE2Ay8B7wMeAfUDLAFD/wD/AA4AAysBQgMeAfUDLwHvAyUBNxwA
        AyUBNwMvAe8DHgH1AysBQgMrAUIDHgH1Ay8B7wMlATcDHQEpAz8B5wMUAfoDMwFSDAADJQE3Ay8B7wMe
        AfUDKwFC/wD/AAYAAysBQgMeAfUDLwHvAyUBNhwAAyUBNgMvAe8DHgH1AywBQwgAAysBQgMeAfUDLwHv
        AyUBNgMdASkDPwHnAxQB+gMzAVIMAAMlATYDLwHvAx4B9QMrAUL/AP0AAysBQgMeAfUDLwHvAyUBNhwA
        AyUBNgMvAe8DHgH1AywBQxAAAywBQwMeAfUDLwHvAyUBNgMdASkDPwHnAxQB+gMzAVIMAAMlATYDLwHv
        Ax4B9QMrAUL/APUAAywBQwMeAfUDLwHvAyUBNhwAAyUBNgMvAe8DHgH1AysBQhgAAysBQgMeAfUDLwHv
        AyUBNgMdASkDPwHnAxQB+gMqAT8MAAMlATYDLwHvAx4B9QMsAUP/AO0AAysBQgMeAfUDLwHvAyUBNhwA
        AyUBNgMvAe8DHgH1AysBQiAAAysBQgMeAfUDLwHvAyUBNgMdASkDVQHIAywBQxAAAyUBNgMvAe8DHgH1
        AysBQv8A5QADHAEnAyYB8wMvAe8DJQE3HAADJQE3Ay8B7wMeAfUDKwFCKAADKwFCAx4B9QMvAe8DJQE3
        CAADIwEzAygBOwwAAyUBNwMvAe8DJgHzAxwBJ/8A4QADUgGnAwUB/gMsAUMcAAMlATYDLwHvAx4B9QMs
        AUMwAAMrAUIDHgH1Ay8B7wMlATYEAANVAbwDFAH6AzMBUgwAAywBQwMFAf4DUgGn/wDhAAM3AewDVAHK
        HAADJQE2Ay8B7wMeAfUDLAFDOAADLAFDAx4B9QMvAe8DJQE2Ax0BKQM/AecDFAH6AzMBUgwAA1QBygM3
        Aez/AOEAAxQB+gNVAbQYAAMlATYDLwHvAx4B9QMrAUJAAAMrAUIDHgH1Ay8B7wMlATYDHQEpAz8B5wMU
        AfoDHQEpCAADVQG0AxQB+v8A4QADUQHRAzcB7AMJAQwQAAMlATYDLwHvAx4B9QMrAUJIAAMrAUIDHgH1
        Ay8B7wMlATYDHQEoA04BmAMNAREEAAMJAQwDOgHrA1EB0f8A4QADPgFrAwAB/wNUAasDCQEMCAADLAFD
        Ay8B7wMeAfUDKwFCUAADKwFCAx4B9QMvAe8DLAFDCAADCQEMA1QBqwMAAf8DPgFr/wDhAAMCAQMDUwGt
        AwAB/wM6AesDVQG0A1QBygMFAf4DJgHzAysBQlgAAysBQgMmAfMDBQH+A1QBygNVAbQDNwHsAwAB/wNT
        Aa0DAgED/wDlAAMCAQMDPgFrA1EB0QMUAfoDNwHsA1IBpwMcASdgAAMcAScDUgGnAzcB7AMUAfoDUQHR
        Az4BawMCAQP/AOUAAUIBTQE+BwABPgMAASgDAAGgAwABKAMAAQEBAAEBBQABIAEDFgAD/wEAAYAD/wEB
        EAABfwH/Af4QAAEMAT8B/wH8ATAPAAEeAR8B/wH4AXgPAAE/AQ8B/wHwAfwPAAE/AYcB/wHhAfwPAAEf
        AcMB/wHDAfgPAAEPAeEB/wGHAfAPAAGHAfAB/wEPAeEPAAHDAfgBfgEfAcMPAAHhAfwBPAE/AYcPAAHw
        Af4BGAF/AQ8PAAH4AX8BAAH+AR8PAAH8AT8BgQH8AT8PAAH+AR8BwwH4AX8PAAH/AQ8B5wHwAf8PAAH/
        AYcB/wHhAf8PAAH/AcMB/wHDAf8PAAH/AeEB/wGHAf8PAAH/AfAB/wEPAf8PAAH/AfAB/wEPAf8PAAH/
        AeEB/wGHAf8PAAH/AcMB+QHDAf8PAAH/AYcB+AHhAf8PAAH/AQ8B4AFwAf8PAAH+AR8BwAE4AX8PAAH8
        AT8BgAEcAT8PAAH4AX8BAAEOAR8PAAHwAf4BGAEHAQ8PAAHhAfwBPAEDAYcPAAHDAfgBfgEBAcMPAAGH
        AfAB/wEBAeEPAAEPAeEB/wGGAXAPAAEfAcMB/wHCATgPAAE/AYcB/wHgARwPAAE/AQ8B/wHwAQwPAAEe
        AR8B/wH4AQgPAAEMAT8B/wH8ATAQAAF/Af8B/hAAAYAD/wEBDwAL
</value>
  </data>
</root>