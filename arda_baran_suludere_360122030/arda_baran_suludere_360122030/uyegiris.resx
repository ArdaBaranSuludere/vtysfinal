<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ımageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADK
        DAAAAk1TRnQBSQFMAwEBAAE4AQABOAEAASgBAAEoAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABoAMA
        ASgDAAEBAQABIAYAAWQWAAMCAQMDPgFrA1kB0QMbAfoDQwHsA1MBpwMcASdgAAMcAScDUwGnA0MB7AMb
        AfoDWQHRAz4BawMCAQP/AOUAAwIBAwNVAa0DAAH/A0MB7ANVAbQDWgHKAwcB/gMxAfMDKwFCWAADKwFC
        AzEB8wMHAf4DWgHKA1UBtANHAesDAAH/A1UBrQMCAQP/AOEAAz4BawMAAf8DVAGrAwkBDAgAAywBQwM6
        Ae8DKQH1AysBQlAAAysBQgMpAfUDOgHvAywBQwgAAwkBDANUAasDAAH/Az4Ba/8A4QADWQHRA0MB7AMJ
        AQwQAAMlATYDOgHvAykB9QMrAUJIAAMrAUIDKQH1AzoB7wMlATYQAAMJAQsDRwHrA1kB0f8A4QADGwH6
        A1UBtBgAAyUBNgM6Ae8DKQH1AysBQkAAAysBQgMpAfUDOgHvAyUBNhgAA1UBtAMbAfr/AOEAA0MB7ANa
        AcocAAMlATYDOgHvAykB9QMsAUM4AAMsAUMDKQH1AzoB7wMlATYcAANaAcoDQwHs/wDhAANTAacDBwH+
        AywBQxwAAyUBNgM6Ae8DKQH1AywBQzAAAywBQwMpAfUDOgHvAyUBNhwAAywBQwMHAf4DUwGn/wDhAAMc
        AScDMQHzAzoB7wMlATccAAMlATcDOgHvAykB9QMrAUIoAAMrAUIDKQH1AzoB7wMlATccAAMlATcDOgHv
        AzEB8wMcASf/AOUAAysBQgMpAfUDOgHvAyUBNhwAAyUBNgM6Ae8DKQH1AysBQiAAAysBQgMpAfUDOgHv
        AyUBNhwAAyUBNgM6Ae8DKQH1AysBQv8A7QADLAFDAykB9QM6Ae8DJQE2HAADJQE2AzoB7wMpAfUDKwFC
        GAADKwFCAykB9QM6Ae8DJQE2HAADJQE2AzoB7wMpAfUDLAFD/wD1AAMrAUIDKQH1AzoB7wMlATYcAAMl
        ATYDOgHvAykB9QMsAUMQAAMsAUMDKQH1AzoB7wMlATYcAAMlATYDOgHvAykB9QMrAUL/AP0AAysBQgMp
        AfUDOgHvAyUBNhwAAyUBNgM6Ae8DKQH1AywBQwgAAywBQwMpAfUDOgHvAyUBNhwAAyUBNgM6Ae8DKQH1
        AysBQv8A/wAGAAMrAUIDKQH1AzoB7wMlATccAAMlATcDOgHvAykB9QMrAUIDKwFCAykB9QM6Ae8DJQE3
        HAADJQE3AzoB7wMpAfUDKwFC/wD/AA4AAysBQgMpAfUDOgHvAyUBNhwAAyUBNgM6Ae8DKQH1AykB9QM6
        Ae8DJQE2HAADJQE2AzoB7wMpAfUDLAFD/wD/ABYAAywBQwMpAfUDOgHvAyUBNhwAAyUBNgM6Ae8DOgHv
        AyUBNhwAAyUBNgM6Ae8DKQH1AywBQ/8A/wAeAAMrAUIDKQH1AzoB7wMlATYcAAMYASEDGAEhHAADJQE2
        AzoB7wMpAfUDKwFC/wD/ACYAAysBQgMpAfUDOgHvAyUBNjgAAyUBNgM6Ae8DKQH1AysBQv8A/wAuAAMr
        AUIDKQH1AzoB7wMlATcwAAMlATcDOgHvAykB9QMrAUL/AP8ANgADKwFCAykB9QM6Ae8DJQE2KAADJQE2
        AzoB7wMpAfUDLAFD/wD/AD4AAywBQwMpAfUDOgHvAxgBISAAAxgBIQM6Ae8DKQH1AywBQ/8A/wBCAAMs
        AUMDKQH1AzoB7wMYASEgAAMYASEDOgHvAykB9QMsAUP/AP8APgADLAFDAykB9QM6Ae8DJQE2KAADJQE2
        AzoB7wMpAfUDLAFD/wD/ADYAAysBQgMpAfUDOgHvAyUBNxwABAIDDwEUDAADJQE3AzoB7wMpAfUDKwFC
        /wD/AC4AAysBQgMpAfUDOgHvAyUBNiAAA0ABcAMcAfkDMwFSDAADJQE2AzoB7wMpAfUDKwFC/wD/ACYA
        AysBQgMpAfUDOgHvAyUBNhwAAxgBIQMYASEDGwEmA0sB5wMbAfoDMwFSDAADJQE2AzoB7wMpAfUDKwFC
        /wD/AB4AAywBQwMpAfUDOgHvAyUBNhwAAyUBNgM6Ae8DOgHvAyUBNgMdASkDSwHnAxsB+gMzAVIMAAMl
        ATYDOgHvAykB9QMsAUP/AP8AFgADLAFDAykB9QM6Ae8DJQE2HAADJQE2AzoB7wMpAfUDKQH1AzoB7wMl
        ATYDHQEpA0sB5wMbAfoDMwFSDAADJQE2AzoB7wMpAfUDLAFD/wD/AA4AAysBQgMpAfUDOgHvAyUBNxwA
        AyUBNwM6Ae8DKQH1AysBQgMrAUIDKQH1AzoB7wMlATcDHQEpA0sB5wMbAfoDMwFSDAADJQE3AzoB7wMp
        AfUDKwFC/wD/AAYAAysBQgMpAfUDOgHvAyUBNhwAAyUBNgM6Ae8DKQH1AywBQwgAAysBQgMpAfUDOgHv
        AyUBNgMdASkDSwHnAxsB+gMzAVIMAAMlATYDOgHvAykB9QMrAUL/AP0AAysBQgMpAfUDOgHvAyUBNhwA
        AyUBNgM6Ae8DKQH1AywBQxAAAywBQwMpAfUDOgHvAyUBNgMdASkDSwHnAxsB+gMzAVIMAAMlATYDOgHv
        AykB9QMrAUL/APUAAywBQwMpAfUDOgHvAyUBNhwAAyUBNgM6Ae8DKQH1AysBQhgAAysBQgMpAfUDOgHv
        AyUBNgMdASkDSwHnAxsB+gMqAT8MAAMlATYDOgHvAykB9QMsAUP/AO0AAysBQgMpAfUDOgHvAyUBNhwA
        AyUBNgM6Ae8DKQH1AysBQiAAAysBQgMpAfUDOgHvAyUBNgMdASkDWwHIAywBQxAAAyUBNgM6Ae8DKQH1
        AysBQv8A5QADHAEnAzEB8wM6Ae8DJQE3HAADJQE3AzoB7wMpAfUDKwFCKAADKwFCAykB9QM6Ae8DJQE3
        CAADIwEzAygBOwwAAyUBNwM6Ae8DMQHzAxwBJ/8A4QADUwGnAwcB/gMsAUMcAAMlATYDOgHvAykB9QMs
        AUMwAAMrAUIDKQH1AzoB7wMlATYEAANXAbwDGwH6AzMBUgwAAywBQwMHAf4DUwGn/wDhAANDAewDWgHK
        HAADJQE2AzoB7wMpAfUDLAFDOAADLAFDAykB9QM6Ae8DJQE2Ax0BKQNLAecDGwH6AzMBUgwAA1oBygND
        Aez/AOEAAxsB+gNVAbQYAAMlATYDOgHvAykB9QMrAUJAAAMrAUIDKQH1AzoB7wMlATYDHQEpA0sB5wMb
        AfoDHQEpCAADVQG0AxsB+v8A4QADWQHRA0MB7AMJAQwQAAMlATYDOgHvAykB9QMrAUJIAAMrAUIDKQH1
        AzoB7wMlATYDHQEoA04BmAMNAREEAAMJAQwDRwHrA1kB0f8A4QADPgFrAwAB/wNUAasDCQEMCAADLAFD
        AzoB7wMpAfUDKwFCUAADKwFCAykB9QM6Ae8DLAFDCAADCQEMA1QBqwMAAf8DPgFr/wDhAAMCAQMDVQGt
        AwAB/wNHAesDVQG0A1oBygMHAf4DMQHzAysBQlgAAysBQgMxAfMDBwH+A1oBygNVAbQDQwHsAwAB/wNV
        Aa0DAgED/wDlAAMCAQMDPgFrA1kB0QMbAfoDQwHsA1MBpwMcASdgAAMcAScDUwGnA0MB7AMbAfoDWQHR
        Az4BawMCAQP/AOUAAUIBTQE+BwABPgMAASgDAAGgAwABKAMAAQEBAAEBBQABIAEDFgAD/wEAAYAD/wEB
        EAABfwH/Af4QAAEMAT8B/wH8ATAPAAEeAR8B/wH4AXgPAAE/AQ8B/wHwAfwPAAE/AYcB/wHhAfwPAAEf
        AcMB/wHDAfgPAAEPAeEB/wGHAfAPAAGHAfAB/wEPAeEPAAHDAfgBfgEfAcMPAAHhAfwBPAE/AYcPAAHw
        Af4BGAF/AQ8PAAH4AX8BAAH+AR8PAAH8AT8BgQH8AT8PAAH+AR8BwwH4AX8PAAH/AQ8B5wHwAf8PAAH/
        AYcB/wHhAf8PAAH/AcMB/wHDAf8PAAH/AeEB/wGHAf8PAAH/AfAB/wEPAf8PAAH/AfAB/wEPAf8PAAH/
        AeEB/wGHAf8PAAH/AcMB+QHDAf8PAAH/AYcB+AHhAf8PAAH/AQ8B4AFwAf8PAAH+AR8BwAE4AX8PAAH8
        AT8BgAEcAT8PAAH4AX8BAAEOAR8PAAHwAf4BGAEHAQ8PAAHhAfwBPAEDAYcPAAHDAfgBfgEBAcMPAAGH
        AfAB/wEBAeEPAAEPAeEB/wGGAXAPAAEfAcMB/wHCATgPAAE/AYcB/wHgARwPAAE/AQ8B/wHwAQwPAAEe
        AR8B/wH4AQgPAAEMAT8B/wH8ATAQAAF/Af8B/hAAAYAD/wEBDwAL
</value>
  </data>
</root>